import streamlit as st

# Store partial codes here (like we did in Flask).
PARTIAL_CODES = {
    "challenge1": "URL-HACK-123",
    "challenge2": "MULTI-ENCODING-456",
    "challenge3": "HIDDEN-IMAGE-789",
    "challenge4": "LOCATION-ABC-999"
}

def show_challenge_1():
    st.title("Challenge 1: URL –ú–∞–Ω–∏–ø—É–ª–∞—Ü–∏—è")
    st.write(
        "–û–±–∏–∫–Ω–æ–≤–µ–Ω–æ —â–µ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ `?role=guest` –Ω–∞ `?role=admin` –≤ URL-–∞, "
        "–Ω–æ —Ç—É–∫ –ø—Ä–æ—Å—Ç–æ –≤—ä–≤–µ–¥–µ—Ç–µ –∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—ä—Ä –¥–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ, –∑–∞ –¥–∞ –ø–æ–ª—É—á–∏—Ç–µ –∞–¥–º–∏–Ω –¥–æ—Å—Ç—ä–ø."
    )
    # We simulate "URL manipulation" by letting the user guess the correct param value.
    user_input = st.text_input("–í—ä–≤–µ–¥–µ—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ `role`:", value="")
    if user_input.lower() == "admin":
        st.success("–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! –û—Ç–∫—Ä–∏—Ö—Ç–µ –ø—Ä–∞–≤–∏–ª–Ω–æ—Ç–æ 'role'!")
        st.write(f"–í–∞—à–∏—è—Ç –ø—ä—Ä–≤–∏ —á–∞—Å—Ç–∏—á–µ–Ω –∫–æ–¥ –µ: **{PARTIAL_CODES['challenge1']}**")
        st.write("–ú–æ–∂–µ—Ç–µ –¥–∞ –ø—Ä–µ–º–∏–Ω–µ—Ç–µ –∫—ä–º Challenge 2 –æ—Ç —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ—Ç–æ –º–µ–Ω—é.")
    else:
        st.warning("–î–æ—Å—Ç—ä–ø –æ—Ç–∫–∞–∑–∞–Ω. –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü–æ–º–∏—Å–ª–µ—Ç–µ –∑–∞ –ø–æ-–≤–∏—Å–æ–∫–∏ –ø—Ä–∞–≤–∞...")

def show_challenge_2():
    st.title("Challenge 2: –ú–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –∫–æ–¥–∏—Ä–∞–Ω–µ + –®–∏—Ñ—ä—Ä –Ω–∞ –¶–µ–∑–∞—Ä")
    st.write(
        "–¢—É–∫ –±–∏—Ö—Ç–µ –ø–æ–ª—É—á–∏–ª–∏ –º–∞–ª–∫–æ Base64/–¶–µ–∑–∞—Ä —à–∏—Ñ—Ä–æ–≤–∞–Ω —Ç–µ–∫—Å—Ç. "
        "–û—Ç–∫—Ä–∏–π—Ç–µ –∫—Ä–∞–π–Ω–æ—Ç–æ –¥–µ–∫–æ–¥–∏—Ä–∞–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∏ –≤—ä–≤–µ–¥–µ—Ç–µ —á–∞—Å—Ç–∏—á–Ω–∏—è –∫–æ–¥."
    )
    user_input = st.text_input("–í—ä–≤–µ–¥–µ—Ç–µ —Ä–∞–∑–∫—Ä–∏—Ç–∏—è —á–∞—Å—Ç–∏—á–µ–Ω –∫–æ–¥:", value="")
    if user_input == PARTIAL_CODES["challenge2"]:
        st.success("–¢–æ—á–Ω–æ —Ç–∞–∫–∞! –ü—Ä–æ–¥—ä–ª–∂–µ—Ç–µ –∫—ä–º Challenge 3.")
    elif user_input:
        st.error("–ì—Ä–µ—à–Ω–æ —Ä–µ—à–µ–Ω–∏–µ. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ!")

def show_challenge_3():
    st.title("Challenge 3: –°–∫—Ä–∏—Ç–æ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–°—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏—è / EXIF)")
    st.write(
        "–ó–Ω–∞–µ—Ö—Ç–µ –ª–∏, —á–µ –Ω–∞—à–µ—Ç–æ —É—á–∏–ª–∏—â–µ ELSYS –∏–º–∞ –¥–≤–µ –µ–º–±–ª–µ–º–∞—Ç–∏—á–Ω–∏ —Å—ä–±–∏—Ç–∏—è –≤—Å—è–∫–∞ –≥–æ–¥–∏–Ω–∞, "
        "–æ—Ä–≥–∞–Ω–∏–∑–∏—Ä–∞–Ω–∏ –æ—Ç —É—á–µ–Ω–∏—Ü–∏ –∑–∞ —É—á–µ–Ω–∏—Ü–∏? –¢–æ–≤–∞ —Å–∞ **HackTues** –∏ **TuesFest**."
    )
    st.write(
        "–¢—É–∫ —â–µ –∏–º–∞—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫—ä–¥–µ—Ç–æ –µ —Å–∫—Ä–∏—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (EXIF –∏–ª–∏ —Å—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏—è). "
        "–°–ª–µ–¥ –∫–∞—Ç–æ –Ω–∞–º–µ—Ä–∏—Ç–µ —Ç–µ–∫—Å—Ç–∞, –≤—ä–≤–µ–¥–µ—Ç–µ —á–∞—Å—Ç–∏—á–Ω–∏—è –∫–æ–¥."
    )
    # Placeholder image demonstration
    st.image("placeholder-stego.jpg", caption="–ü—Ä–∏–º–µ—Ä–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–æ—Å—Ç–∞–≤–µ—Ç–µ –∏—Å—Ç–∏–Ω—Å–∫–æ—Ç–æ)")
    
    user_input = st.text_input("–í—ä–≤–µ–¥–µ—Ç–µ –æ—Ç–∫—Ä–∏—Ç–∏—è —á–∞—Å—Ç–∏—á–µ–Ω –∫–æ–¥:", value="")
    if user_input == PARTIAL_CODES["challenge3"]:
        st.success("–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –Ω–∞–º–µ—Ä–∏—Ö—Ç–µ —Å–∫—Ä–∏—Ç–∞—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!")
        st.write("–ü—Ä–µ–º–∏–Ω–µ—Ç–µ –∫—ä–º Challenge 4.")
    elif user_input:
        st.error("–ì—Ä–µ—à–Ω–æ —Ä–µ—à–µ–Ω–∏–µ. –û–ø–∏—Ç–∞–π—Ç–µ –ø–∞–∫!")

def show_challenge_4():
    st.title("Challenge 4: –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è")
    st.write(
        "–ü–æ–ª—É—á–∞–≤–∞—Ç–µ —Å–Ω–∏–º–∫–∞ –Ω–∞ –ø–æ-–Ω–µ–æ–±–∏—á–∞–π–Ω–∞ –∑–∞–±–µ–ª–µ–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç. "
        "–ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ reverse image search –∏–ª–∏ —É–ª–∏–∫–∏, –∑–∞ –¥–∞ –æ—Ç–∫—Ä–∏–µ—Ç–µ –º—è—Å—Ç–æ—Ç–æ. "
        "–ü–æ—Å–ª–µ –≤—ä–≤–µ–¥–µ—Ç–µ —á–∞—Å—Ç–∏—á–Ω–∏—è –∫–æ–¥."
    )
    # Placeholder image demonstration
    st.image("placeholder-landmark.jpg", caption="–ü—Ä–∏–º–µ—Ä–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–æ—Å—Ç–∞–≤–µ—Ç–µ –∏—Å—Ç–∏–Ω—Å–∫–æ—Ç–æ)")
    
    user_input = st.text_input("–í—ä–≤–µ–¥–µ—Ç–µ –æ—Ç–∫—Ä–∏—Ç–∏—è —á–∞—Å—Ç–∏—á–µ–Ω –∫–æ–¥:", value="")
    if user_input == PARTIAL_CODES["challenge4"]:
        st.success("–ß—É–¥–µ—Å–Ω–æ! –û—Ç–∫—Ä–∏—Ö—Ç–µ —Ñ–∏–Ω–∞–ª–Ω–∏—è –∫–æ–¥. –û—Ç–∏–¥–µ—Ç–µ –Ω–∞ 'Final Submit', –∑–∞ –¥–∞ –∑–∞–≤—ä—Ä—à–∏—Ç–µ.")
    elif user_input:
        st.error("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∫–æ–¥. –û–ø–∏—Ç–∞–π—Ç–µ –ø–∞–∫!")

def show_final_submit():
    st.title("–§–∏–Ω–∞–ª–µ–Ω –µ—Ç–∞–ø: –í—ä–≤–µ–¥–µ—Ç–µ —á–µ—Ç–∏—Ä–∏—Ç–µ –∫–æ–¥–∞")
    st.write("–°–ª–µ–¥ –∫–∞—Ç–æ —Å—Ç–µ –ø—Ä–µ–º–∏–Ω–∞–ª–∏ –≤—Å–∏—á–∫–∏ –ø—Ä–µ–¥–∏–∑–≤–∏–∫–∞—Ç–µ–ª—Å—Ç–≤–∞, –≤—ä–≤–µ–¥–µ—Ç–µ —á–µ—Ç–∏—Ä–∏—Ç–µ –∫–æ–¥–∞ —Ç—É–∫.")
    
    code1 = st.text_input("–ö–æ–¥ –æ—Ç Challenge 1")
    code2 = st.text_input("–ö–æ–¥ –æ—Ç Challenge 2")
    code3 = st.text_input("–ö–æ–¥ –æ—Ç Challenge 3")
    code4 = st.text_input("–ö–æ–¥ –æ—Ç Challenge 4")
    
    if st.button("–ò–∑–ø—Ä–∞—Ç–∏"):
        if (code1 == PARTIAL_CODES["challenge1"] and
            code2 == PARTIAL_CODES["challenge2"] and
            code3 == PARTIAL_CODES["challenge3"] and
            code4 == PARTIAL_CODES["challenge4"]):
            st.balloons()
            st.success("–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! –£—Å–ø—è—Ö—Ç–µ –¥–∞ –≤—ä–≤–µ–¥–µ—Ç–µ –≤—Å–∏—á–∫–∏ –∫–æ–¥–æ–≤–µ –ø—Ä–∞–≤–∏–ª–Ω–æ!")
            st.write("–ü–æ–∫–∞–∂–µ—Ç–µ —Ç–æ–∑–∏ –µ–∫—Ä–∞–Ω, –∑–∞ –¥–∞ –ø–æ–ª—É—á–∏—Ç–µ –≤–∞—à–∞—Ç–∞ –Ω–∞–≥—Ä–∞–¥–∞ (—Ç–µ–Ω–∏—Å–∫–∞ –∏ —Ç.–Ω.).")
        else:
            st.error("–ù—è–∫–æ–π –æ—Ç –∫–æ–¥–æ–≤–µ—Ç–µ –Ω–µ –µ –≤–µ—Ä–µ–Ω. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ!")

def main():
    st.set_page_config(page_title="Mini CTF Challenges", layout="centered")
    st.sidebar.title("CTF –ú–µ–Ω—é")
    
    pages = {
        "üîì Challenge 1 (URL Manipulation)": show_challenge_1,
        "üîë Challenge 2 (Encoding/Caesar)": show_challenge_2,
        "üñº Challenge 3 (Stego/EXIF)": show_challenge_3,
        "üåç Challenge 4 (Geolocation)": show_challenge_4,
        "üèÅ Final Submit": show_final_submit
    }
    
    choice = st.sidebar.radio("–ò–∑–±–µ—Ä–µ—Ç–µ –ø—Ä–µ–¥–∏–∑–≤–∏–∫–∞—Ç–µ–ª—Å—Ç–≤–æ:", list(pages.keys()))
    pages[choice]()

if __name__ == "__main__":
    main()
